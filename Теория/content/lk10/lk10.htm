<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>

<HEAD>
  <LINK rel=stylesheet href="../../css/styles.css" type=text/css>
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
  <META HTTP-EQUIV="Content-Language" CONTENT="ru">
  <title>“ема є10</title>
  <base target="_top">
</HEAD>

<BODY>
  <div class="title-1">
    Ўаблон
  </div>
  <div class="content">
    <div class="title-2">
      Ўаблон Ц параметризованный класс
    </div>
    <p>ћожно определить класс, параметризованный типом данных. “акой класс называют шаблоном или обобщенным классом:</p>
    <p>public class List
      <T>
    </p>
    <p>{
    </p>
    <p>public List();
    </p>
    <p>public void Add(T item);
    </p>
    <p>public void AddRange(List
      <T> collection);
    </p>
    <p>public bool Remove(T item);
    </p>
    <p>public T[] ToArray();</p>
    <p>...
    </p>
    <p>}
    </p>
    <p>Ќа основе шаблона можно сконструировать тип и создать переменную сконструированного типа:
    </p>
    <p>var stringList = new List
      <string>();
    </p>
    <p>var integerList = new List
      <int>();
    </p>
    <p>ѕредставление в пам€ти сконструированного типа зависит от типа-параметра. ѕредставление оптимизировано дл€ каждого отдельного
      скал€рного типа-параметра (например, int, double и т.д.) и дл€ всех ссылочных типов (например, object, string и т.д.).</p>
    <p>ѕри описании шаблона можно ограничить возможные значени€ параметра-типа:
    </p>
    <p>public class List
      <T>
    </p>
    <p> where T: ListItem
      <T>
    </p>
    <p>{
    </p>
    <p>...
    </p>
    <p>public void Add(T item); // ¬нутри шаблона - List
      <T>.Add()
    </p>
    <p>...
    </p>
    <p>}
    </p>
    <p>¬ариант шаблона с несколькими параметрами и ограничени€ми:
    </p>
    <p>public class Dictionary
      <K, V>
    </p>
    <p>where K: IComparable
      <K>, ISerializable</p>
    <p>where V: ISerializable</p>
    <p>{
    </p>
    <p>public void Add(K key, V value); // Dictionary
      <K, V>.Add()
    </p>
    <p>}
    </p>
</BODY>

</HTML>