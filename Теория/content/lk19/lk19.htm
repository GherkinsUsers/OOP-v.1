<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>
<HEAD>
    <LINK rel=stylesheet href="../../css/styles.css" type=text/css>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
    <META HTTP-EQUIV="Content-Language" CONTENT="ru">
    <title>Тема №19</title>
    <base target="_top">
</HEAD>
<BODY>
  <div class="title-1">
    Множественное наследование в языке C++
</div>
<div class="content">

    <div class="title-2">
        Множественное наследование
    </div>
<p>В С++ множественное наследование подразумевает, что у одного класса может быть несколько базовых классов</p>
<p>class TDelimitedReader : public TTextReader, public TStringList

    {</p>
<p>  ...

};</p>
<p>Объект класса TDelimitedReader содержит все поля и методы базовых классов TTextReader и TStringList. При этом в классе TDelimitedReader можно переопределять виртуальные методы каждого базового класса.</p>
<p>Множественное наследование имеет ряд проблем:</p>
<p> отсутствие эффективной реализации (неэффективность скрыта от программиста);</p>
<p>неоднозначность, возникающая из-за того, что в базовых классах могут быть одноименные поля, а также методы с одинаковой сигнатурой;</p>
<p>повторяющийся базовый класс в иерархии классов.</p>
<p>Неоднозначность при множественном наследовании</p>
<p>class TTextReader

    {</p>
<p>  virtual void NextLine();

    ...
  
  };</p>
<p>class TStringList

    {</p>
<p>public:</p>
<p>virtual void NextLine();</p>
<p>  ...

};</p>
<p>class TDelimitedReader: public TTextReader, public TStringList

    {</p>
<p>  ...

};</p>
<p>TDelimitedReader*Reader;</p>
<p>Reader->NextLine(); // Ошибка. Неоднозначность.</p>
<p>Неоднозначность возникает потому, что в классе TDelimitedReader существуют две таблицы виртуальных методов и неизвестно, к какой из них надо обращаться за методом NextLine(). Поэтому последний оператор должен быть скорректирован на следующий:</p>
<p>Reader->TTextReader::NextLine();</p>
<p>или:</p>
<p>Reader->TStringList::NextLine();</p>
<p>В С++ для классов поддерживается столько таблиц виртуальных методов, сколько у него базовых классов. При перекрытии общего виртуального метода, существующего в нескольких базовых классах, происходит замещение адреса во всех таблицах виртуальных методов.

    Перегрузка функций по типам аргументов не приводит к разрешению неоднозначности.</p>
<p>Если функция NextLine() была объявлена с различной сигнатурой в различных классах, то неоднозначность тоже остается.</p>
<p>В некоторых случаях наличие в базовых классах функций с одинаковыми именами (но различным количеством параметров или различными типами параметров) является преднамеренным решением. Чтобы в производном классе открыть нужную функцию нужного базового класса, применяется оператор using:</p>
<p>class TTextReader

    {</p>
<p>public:</p>
<p> virtual void NextLine();

    </p>
<p>  ...

};</p>
<p>class TStringList

    {</p>
<p> public:</p>
<p> virtual void NextLine(int);</p>
<p>  ...

};</p>
<p>class TDelimitedReader : public TTextReader, public TStringList

    {</p>
<p>public:</p>
<p>using TStringList::NextLine;</p>
<p>virtual void NextLine(int);</p>
<p>  ...

};</p>

</BODY>
</HTML>